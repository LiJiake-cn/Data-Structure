//创
//增
//删
//查
//判空判满
//带头结点的链栈

#include<stdio.h>
#include<stdlib.h>
typedef int ElemType;
typedef struct LinkNode
{
    ElemType data;
    struct  LinkNode *next;
}LinkNode,*LiStack;

//初始化一个链栈（带头结点）
bool InitStack(LiStack &L)
{
    L=(LinkNode*)malloc(sizeof(LinkNode));//分配一个头结点
    if(L==NULL){
        return false;
    }
    L->next=NULL;
    return true;
}

//入栈——头插法建立单链表
bool Push(LiStack &L,ElemType x)
{
    LiStack top=(LinkNode*)malloc(sizeof(LinkNode));
    top->next=NULL;
    top->data=x;
    top->next=L->next;
    L->next=top;
}

//出栈
bool Pop(LiStack &L,ElemType x)
{
    if(L->next==NULL){
        return false;
    }
    x=L->next->data;
    LiStack top=L->next;
    L->next=top->next;
    free(top);
}
